buildscript {
	ext {
		springBootVersion = '2.1.1.RELEASE'
	}
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'

group = 'com.at'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

//bootJar {
//	baseName = 'at_netflix'
//	version =  '0.1.0'
//}

task unpack(type: Copy) {
	dependsOn bootJar
	from(zipTree(tasks.bootJar.outputs.files.singleFile))
	into("build/dependency")
}

docker {
	name "${project.group}/${bootJar.baseName}"
	copySpec.from(tasks.unpack.outputs).into("dependency")
	buildArgs(['DEPENDENCY': "dependency"])
}

repositories {
	mavenCentral()
}


dependencies {
//	implementation('org.springframework.boot:spring-boot-starter-data-mongodb')
	implementation('org.springframework.boot:spring-boot-starter-data-redis')
	compile("org.springframework.boot:spring-boot-starter-data-jpa")
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.springframework.boot:spring-boot-starter-security')
	runtimeOnly('org.springframework.boot:spring-boot-devtools')
	compile('org.postgresql:postgresql:42.2.5')

	annotationProcessor("org.projectlombok:lombok")
	implementation("org.projectlombok:lombok")
	compileOnly('org.projectlombok:lombok')

	compile('io.jsonwebtoken:jjwt:0.7.0')
	compile('redis.clients:jedis')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
//	testImplementation('org.springframework.restdocs:spring-restdocs-mockmvc')
}
